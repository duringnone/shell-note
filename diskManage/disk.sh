#!/bin/bash 
 #磁盘空间管理

# df	列出文件系统的整体磁盘使用量
# du 	检查磁盘空间使用量
# disk	用于磁盘分区
# stat  查看文件inode 信息

# fdisk 磁盘分区
# fsck	磁盘检测,(file system check)
# mkfs	磁盘格式化
# mount 磁盘挂载
# umount	磁盘卸载



# 磁盘空间命令

# 1、 df 检查文件系统的磁盘空间占用情况
# 语法:
##	df [option] [目录或文件名]	
#
# 常用参数:
#	 -a	列出所有的文件系统,包括系统特有的/proc 等文件系统
# 	 -k	以KBytes 的容量单位显示各文件系统
#	 -m	以MBytes 的容量单位显示各文件系统
#	 -h	以人们较易阅读的GBytes,MBytes,KBytes 等格式自行显示
#	 -H	以 M=1000K 取代 M=1024 的进位方式
#	 -T	显示文件系统类型,连同该partition 的filesystem 名称(例如ext3)也列出
#	 -i	不用硬盘容量,而以inode 的数量来显示
#
#  总结:
##	1) df	# 默认显示当前文件系统的使用情况(文件系统名-总容量-已用容量-可用容量-已用百分比-系统挂载路径) 
##	2) df -hm	# 显示以 MBytes 显示的文件系统使用情况; 注: df 后可跟多个参数,若两个参数意义重复,后面参数的内容会覆盖前面的内容, 
##	3) df -ai	# 所有文件系统,同时显示他们的 文件索引号信息, inode 数量使用情况 




# 2、 df 检查文件系统的磁盘空间占用情况
# 语法:
##	du [option] [目录或文件名]	
#	 -a	列出所有的文件系统,包括系统特有的/proc 等文件系统
# 	 -k	以KBytes 的容量单位显示各文件系统
#	 -m	以MBytes 的容量单位显示各文件系统
#	 -h	以人们较易阅读的GBytes,MBytes,KBytes 等格式自行显示
#	 -s	列出总量，而不列出每个子目录占用容量
#	 -S	只显示各个子目录的占用容量,不显示目录总容量
#	 
#	 
# 总结:
##	1) du -h 	# 常用	 
##	2) du -m	# 当文件容量不足1MBytes时,向上取整,如: 文件目录容量为206KB,du -m 后显示 1MB
##	3) du -s 	# 在同一目录下,  -s 的结果数 = -S 的结果数相加之和 


# 3、 stat  获取文件inode信息
# 语法:
## 	stat 文件路径名		# 获取文件的inode信息(文件名,文件inode信息,文件的权限,所有者的UID和所属GID,以及文件的创建时间、修改时间...)

#stat执行结果中的参数
## Access：atime 表示我们最后一次访问（仅仅是访问，没有改动）文件的时间
## modify：mtime 表示我们最后一次修改文件的时间
## change：ctime 表示我们最后一次对文件属性改变的时间，包括权限，大小，属性等等。
# 总结:
## 	1) Modify的时间不能单独发生改变,只要Modify时间改变了,其他两个的时间必定发生改变
##	2) 文件系统有文件实际内容和文件属性两部分,两部分数据一般分别存放在不同的区块，权限与属性存放在 inode 中，至于实际数据则放置到 data block 区块中。另外，还有一个超级区块（superblock）会记录整个文件系统的整体信息，包括 inode 与 block 的总量、使用量、剩余量等。
##	3) stat -c ''




# 4、 fdisk	linux系统磁盘分区格式化
# 语法:
# 	fdisk [-l] 装置名称	# fdisk -l : 输出后面接的装置所有的分区内容,只有指定 -l 才输出所有分区内容
#
# 例子:
##	fdisk /dev/hdc		# 获取分区内容
###			注:	 m: 获取参数帮助; 
###				 w: 保存所有动作(即更改记录);
###				 q: 退出,并不保存任何动作(即更改记录);
###				 p: 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态


# 5、mkfs	磁盘格式化
# 语法:
##	mkfs [-t 文件系统格式] 装置文件名	# 磁盘格式化; -t (type): 指定文件系统格式(当前系统支持的)
#
# 总结:
##	1) mkfs[tab][tab]	# 即 mkfs + 按2次tab键, 可查看当前系统所支持的文件系统格式
##



# 6、fsck	磁盘检验,用于检验和维护不一致的文件系统 
# 语法:	
##	fsck [-t 文件系统] [option] 装置名称	# 检验磁盘
# 常用参数:
##	-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数
##	-s : 依序一个一个地执行 fsck 的指令来检查
##	-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查
##	-C : 显示完整的检查进度
##	-d : 打印出 e2fsck 的 debug 结果
##	-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行
##	-R : 同时有 -A 条件时，省略 / 不检查
##	-V : 详细显示模式
##	-a : 如果检查有错则自动修复
##	-r : 如果检查有错则由使用者回答是否修复
##	-y : 选项指定检测每个文件是自动输入yes,在不确定那些是不正常的时候,可以执行 # fsck -y 全部检查修复。
##
# 总结:
##	1) fsck -C -f -t ext3 /dev/hdc6 	# 强制检测 /dev/hdc6 分区(该分区文件系统为 ext3); 注: 若文件系统不曾出现问题，检查的经过非常快速！若加上 -f 强制检查，才会一项一项的显示过程; (-f 表示强制执行)
##	2) fsck[tab][tab]	# fsck + 按两次tab键, 查看并列出系统中所有支持fsck命令 的文件系统 
##




# 7、 mount	 将文件挂载指定挂载点(挂载点:文件分区的入口);
# 语法:	
##	mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点
##
# 总结: 
##	1) 挂载方式: 共两种,临时挂载和永久挂载;此命令为临时挂载,永久挂载需将挂载配置写入守护进程
##	2) mount /dev/hdc6 /mnt/hdc6 		# 将装置/dev/hdc6(分区名) 挂载到 /mnt/hdc6 文件上面




# 8、 umount 	卸除挂载点的装置(即关闭这个分区入口)
# 语法:	
##	 umount [option] 装置文件名或挂载点	# 卸除文件的挂载
##
# 常用参数:
##	-f	强制卸除,可用在类似网络文件系统 (NFS) 无法读取到的情况下	
##	-n	不升级/etc/mtab 的情况下卸除
##
#
# 总结:
##	1) umount /dev/hdc6	# 卸除装置 /dev/hdc6,此处/dev/hdc6位装置名(分区名)
##	2) 
