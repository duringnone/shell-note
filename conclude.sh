#!/bin/bash 

 #归纳总结 

# 1、 `` 和 $() 的区别
## 1)  都表示 命令替换,返回命令执行结果
## 2) `` 嵌套太多层会出问题，$() 嵌套多层没问题
## 3) 所有类unix系统都支持 `` ，需要安装插件才能使用 $() 【使用lnmp安装包默认安装了插件】
## 4) expr 必须借用`` , 且需要以空格分隔开参数;(()) 中变量可带可不带$符号，$[] 中变量必须带有$

# 2、$(())
## 1) 进制转换（为10进制）,格式： $((N#num))，N表示进制如2进制，3进制，8进制，11进制，16进制;num表示N进制数值,$((8#110)) : 将8进制的110转换为十进制数,结果为72
### 例子 echo $((2#110)) => 6	# 将二进制转换为十进制输出



# 3、(())
## 1) 重定义变量值
## 2) $? 表示最后一条命令执行结果反馈(返回值);当命令执行成功返回0，失败返回非0值
### 例1：a=5;b=7 
### 	((a++))
###	echo $a			# 输出：6
###	((a--));echo $a		# 输出：5
###	((a<b));echo $?		# 输出：0， 备注：linux中没错误返回0,
###	((a>b));echo $?		# 输出：1

# 4、 
# 5、 符号
## 1)  + - * / 	加、减、乘、除
## 2)  % 	取余
## 3)  & | ! ^  与、或、非、异或

